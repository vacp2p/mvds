// Code generated by MockGen. DO NOT EDIT.
// Source: state_mock.go

// Package mock_mvds is a generated GoMock package.
package mvds

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MocksyncState is a mock of syncState interface
type MocksyncState struct {
	ctrl     *gomock.Controller
	recorder *MocksyncStateMockRecorder
}

// MocksyncStateMockRecorder is the mock recorder for MocksyncState
type MocksyncStateMockRecorder struct {
	mock *MocksyncState
}

// NewMocksyncState creates a new mock instance
func NewMocksyncState(ctrl *gomock.Controller) *MocksyncState {
	mock := &MocksyncState{ctrl: ctrl}
	mock.recorder = &MocksyncStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MocksyncState) EXPECT() *MocksyncStateMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MocksyncState) Get(group GroupID, id MessageID, sender PeerId) state {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", group, id, sender)
	ret0, _ := ret[0].(state)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MocksyncStateMockRecorder) Get(group, id, sender interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MocksyncState)(nil).Get), group, id, sender)
}

// Set mocks base method
func (m *MocksyncState) Set(group GroupID, id MessageID, sender PeerId, newState state) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", group, id, sender, newState)
}

// Set indicates an expected call of Set
func (mr *MocksyncStateMockRecorder) Set(group, id, sender, newState interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MocksyncState)(nil).Set), group, id, sender, newState)
}

// Remove mocks base method
func (m *MocksyncState) Remove(group GroupID, id MessageID, sender PeerId) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Remove", group, id, sender)
}

// Remove indicates an expected call of Remove
func (mr *MocksyncStateMockRecorder) Remove(group, id, sender interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MocksyncState)(nil).Remove), group, id, sender)
}

// Map mocks base method
func (m *MocksyncState) Map(process func(GroupID, MessageID, PeerId, state) state) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Map", process)
}

// Map indicates an expected call of Map
func (mr *MocksyncStateMockRecorder) Map(process interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Map", reflect.TypeOf((*MocksyncState)(nil).Map), process)
}
